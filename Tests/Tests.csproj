<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{F4C29B9E-2C6A-4556-9B90-A15841FF6F78}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Tests</RootNamespace>
    <AssemblyName>Tests</AssemblyName>
    <TargetFrameworkVersion>v2.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;NET_4_5;NET_4_0;NET20</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <LangVersion>5</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup>
    <DefineConstants Condition=" !$(DefineConstants.Contains(';NET')) ">$(DefineConstants);$(TargetFrameworkVersion.Replace("v", "NET").Replace(".", ""))</DefineConstants>
    <DefineConstants Condition=" $(DefineConstants.Contains(';NET')) ">$(DefineConstants.Remove($(DefineConstants.LastIndexOf(";NET"))));$(TargetFrameworkVersion.Replace("v", "NET").Replace(".", ""))</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="nunit.framework">
      <HintPath>..\packages\NUnit.2.6.3\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="Theraot.Core">
      <HintPath>..\Core\bin\Debug\Theraot.Core.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFrameworkVersion)'!='v2.0' And '$(TargetFrameworkVersion)'!='v3.0'">
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFrameworkVersion)'!='v2.0'">
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="System\Collections\Concurrent\ConcurrentDictionaryTestsEx.cs" />
    <Compile Include="System\Collections\Concurrent\ConcurrentDictionaryTests.cs" />
    <Compile Include="System\Collections\ObjectModel\ObservableCollectionTest.cs" />
    <Compile Include="System\Linq\LookupTestEx.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Add.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_AddChecked.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_And.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_AndAlso.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_ArrayIndex.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_ArrayLength.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Bind.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Call.net35.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Condition.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Divide.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_ElementInit.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Equal.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_ExclusiveOr.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Field.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_GreaterThanOrEqual.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_LeftShift.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_LessThan.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_LessThanOrEqual.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Lift.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_ListBind.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Modulo.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Multiply.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_MultiplyChecked.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_NotEqual.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Or.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_OrElse.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Power.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Property.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_PropertyOrField.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Quote.net35.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_RightShift.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Subtract.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_SubtractChecked.cs" />
    <Compile Include="System\Threading\CancellationTokenSourceTestEx.cs" />
    <Compile Include="Theraot\Collections\ExtensionsTest.cs" />
    <Compile Include="Theraot\Collections\ProgressiveLookupTestEx.cs" />
    <Compile Include="Theraot\Collections\ProgressiveLookupTest.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Theraot\Threading\Needles\LockableNeedleTest.cs" />
    <Compile Include="Theraot\Threading\Needles\WorkTest.cs" />
    <Compile Include="throwback.cs">
      <DependentUpon>throwback.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="ParallelTestHelper.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="System\AggregateExceptionTests.cs" />
    <Compile Include="System\Collections\Generic\HashSetTestEx.cs" />
    <Compile Include="System\Collections\Generic\HashSetTest.cs" />
    <Compile Include="System\Collections\Generic\SortedSetTest.cs" />
    <Compile Include="System\Collections\Specialized\CollectionChangedEventValidators.cs" />
    <Compile Include="System\Collections\Specialized\NotifyCollectionChangedEventArgsTest.cs" />
    <Compile Include="System\Collections\StructuralComparisonsTestEx.cs" />
    <Compile Include="System\Collections\StructuralComparisonsTest.cs" />
    <Compile Include="System\LazyTestEx.cs" />
    <Compile Include="System\LazyTest.cs" />
    <Compile Include="System\Linq\EnumerableGroupByTestEx.cs" />
    <Compile Include="System\Linq\EnumerableAsQueryableTest.cs" />
    <Compile Include="System\Linq\EnumerableMoreTest.cs" />
    <Compile Include="System\Linq\EnumerableTest.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Coalesce.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Constant.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Convert.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_GreaterThan.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Invoke.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Lambda.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_ListInit.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_MakeBinary.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_MemberBind.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_MemberInit.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Negate.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_New.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_NewArrayBounds.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_NewArrayInit.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Not.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_TypeAs.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_TypeIs.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_UnaryPlus.cs" />
    <Compile Include="System\Linq\Expressions\ExpressionTest_Utils.cs" />
    <Compile Include="System\Linq\LookupTest.cs" />
    <Compile Include="System\Threading\CancellationTokenSourceTest.cs" />
    <Compile Include="System\Threading\CancellationTokenTests.cs" />
    <Compile Include="System\Threading\CountdownEventTests.cs" />
    <Compile Include="System\Threading\LazyInitializerTest.cs" />
    <Compile Include="System\Threading\ManualResetEventSlimTests.cs" />
    <Compile Include="System\Threading\SpinLockTests.cs" />
    <Compile Include="System\Threading\ThreadLocalTestsEx.cs" />
    <Compile Include="System\Threading\ThreadLocalTests.cs" />
    <Compile Include="System\Threading\VolatileTest.cs" />
    <Compile Include="System\TupleTest.cs" />
    <Compile Include="System\WeakReferenceTest.cs" />
    <Compile Include="Theraot\Collections\ProgressorTest.cs" />
    <Compile Include="Theraot\Collections\Specialized\AVLTest.cs" />
    <Compile Include="Theraot\Threading\Needles\LazyNeedleTest.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Theraot\Threading\ReadWriteLockTest.cs" />
    <Compile Include="Theraot\Threading\Needles\TransactionalTests.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ItemGroup>
    <None Include="throwback.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>throwback.cs</LastGenOutput>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ProjectExtensions>
    <MonoDevelop>
      <Properties>
        <Policies>
          <TextStylePolicy EolMarker="Windows" inheritsSet="VisualStudio" inheritsScope="text/plain" scope="text/x-csharp" />
          <CSharpFormattingPolicy IndentSwitchBody="True" SimplePropertyFormatting="ForceNewLine" AutoPropertyFormatting="ForceNewLine" IndentPreprocessorDirectives="False" AnonymousMethodBraceStyle="NextLine" PropertyBraceStyle="NextLine" PropertyGetBraceStyle="NextLine" PropertySetBraceStyle="NextLine" SimpleGetBlockFormatting="ForceNewLine" SimpleSetBlockFormatting="ForceNewLine" EventBraceStyle="NextLine" EventAddBraceStyle="NextLine" EventRemoveBraceStyle="NextLine" AllowEventAddBlockInline="False" AllowEventRemoveBlockInline="False" StatementBraceStyle="NextLine" ElseNewLinePlacement="NewLine" CatchNewLinePlacement="NewLine" FinallyNewLinePlacement="NewLine" ArrayInitializerBraceStyle="NextLine" BeforeMethodDeclarationParentheses="False" BeforeMethodCallParentheses="False" BeforeConstructorDeclarationParentheses="False" NewLineBeforeConstructorInitializerColon="NewLine" NewLineAfterConstructorInitializerColon="SameLine" BeforeIndexerDeclarationBracket="False" BeforeDelegateDeclarationParentheses="False" AfterDelegateDeclarationParameterComma="True" NewParentheses="False" SpacesBeforeBrackets="False" MethodDeclarationParameterWrapping="DoNotWrap" AlignToFirstMethodDeclarationParameter="False" IndexerDeclarationParameterWrapping="DoNotWrap" AlignToFirstIndexerDeclarationParameter="False" inheritsSet="Mono" inheritsScope="text/x-csharp" scope="text/x-csharp" />
          <TextStylePolicy EolMarker="Windows" inheritsSet="VisualStudio" inheritsScope="text/plain" scope="text/plain" />
        </Policies>
      </Properties>
    </MonoDevelop>
  </ProjectExtensions>
  <ItemGroup />
</Project>
